{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 22, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/middleware.ts"],"sourcesContent":["// import { NextResponse } from 'next/server'\r\n// import type { NextRequest } from 'next/server'\r\n\r\n// const CODE = process.env.PASSCODE\r\n\r\n// export function middleware(req: NextRequest) {\r\n//   const { pathname } = req.nextUrl\r\n\r\n//   // Allow access to code entry page, API routes, and static files\r\n//   if (\r\n//     pathname === 'pages/enter-code' ||\r\n//     pathname.startsWith('/api/') ||\r\n//     pathname.match(/^\\/_next\\//)\r\n//   ) {\r\n//     return NextResponse.next()\r\n//   }\r\n\r\n//   // If cookie not set or wrong, redirect to /enter-code\r\n//   const pass = req.cookies.get('passcode')?.value\r\n//   if (pass !== CODE) {\r\n//     const url = req.nextUrl.clone()\r\n//     url.pathname = '/pages/enter-code'\r\n//     return NextResponse.redirect(url)\r\n//   }\r\n\r\n//   return NextResponse.next()\r\n// }\r\n\r\n// export const config = { matcher: '/:path*' }"],"names":[],"mappings":"AAAA,6CAA6C;AAC7C,iDAAiD;AAEjD,oCAAoC;AAEpC,iDAAiD;AACjD,qCAAqC;AAErC,qEAAqE;AACrE,SAAS;AACT,yCAAyC;AACzC,sCAAsC;AACtC,mCAAmC;AACnC,QAAQ;AACR,iCAAiC;AACjC,MAAM;AAEN,2DAA2D;AAC3D,oDAAoD;AACpD,yBAAyB;AACzB,sCAAsC;AACtC,yCAAyC;AACzC,wCAAwC;AACxC,MAAM;AAEN,+BAA+B;AAC/B,IAAI;AAEJ,+CAA+C"}}]
}